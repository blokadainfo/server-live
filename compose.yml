services:
  # Reverse proxy
  crowdsec:
    image: docker.io/crowdsecurity/crowdsec:v1.6.11
    environment:
      COLLECTIONS: crowdsecurity/traefik crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules
      CUSTOM_HOSTNAME: crowdsec
      BOUNCER_KEY_TRAEFIK: ${BOUNCER_KEY_TRAEFIK}
    volumes:
      - type: volume
        source: traefik-logs-vol
        target: /var/log/traefik
        volume:
          nocopy: false
      - type: volume
        source: crowdsec-db-vol
        target: /var/lib/crowdsec/data
        volume:
          nocopy: false
      - type: volume
        source: crowdsec-conf-vol
        target: /etc/crowdsec
        volume:
          nocopy: false
      - type: bind
        source: ./acquis.yaml
        target: /etc/crowdsec/acquis.yaml
        read_only: true
    networks:
      - internal
    restart: unless-stopped

  traefik:
    depends_on:
      - crowdsec
    image: docker.io/library/traefik:v3.5.3
    command:
      - "--accesslog"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http3"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--experimental.plugins.bouncer.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
      - "--experimental.plugins.bouncer.version=v1.4.5"
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - type: volume
        source: traefik-logs-vol
        target: /var/log/traefik
        volume:
          nocopy: false
      - type: volume
        source: traefik-acme-vol
        target: /acme
        volume:
          nocopy: false
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    networks:
      - internal
    restart: unless-stopped

  # Restreamer
  restreamer:
    image: docker.io/datarhei/restreamer:dev # TODO: stable ver tag
    environment:
      CORE_ADDRESS: ":8080"
      CORE_HOST_NAME: ${RESTREAMER_DOMAIN}
      CORE_API_AUTH_ENABLE: false # WARN: Authelia SSO must setup
      CORE_TLS_ENABLE: false
      CORE_TLS_AUTO: false
      CORE_RTMP_ENABLE: true
      CORE_RTMP_ENABLE_TLS: false
      CORE_RTMP_ADDRESS: ":1935"
      CORE_RTMP_APP: "/live"
      CORE_RTMP_TOKEN: ""
      CORE_SRT_ENABLE: true
      CORE_SRT_ADDRESS: ":6000"
      CORE_SRT_TOKEN: ""
      CORE_SRT_PASSPHRASE: ${RESTREAMER_SRT_PASSPHRASE}
      CORE_SESSIONS_MAXBITRATE_MBIT: 0
      CORE_SESSIONS_MAXSESSIONS: 0
    volumes:
      - type: volume
        source: restreamer-conf-vol
        target: /core/config
        volume:
          nocopy: false
      - type: volume
        source: restreamer-data-vol
        target: /core/data
        volume:
          nocopy: false
    ports:
      - "1935:1935/tcp" # RTMP
      - "6000:6000/udp" # SRT
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${RESTREAMER_DOMAIN}`)"
      - "traefik.http.routers.backend.middlewares=crowdsec@docker,authelia@docker"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecmode=stream"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey=${BOUNCER_KEY_TRAEFIK}"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecappsecenabled=true"
      - "traefik.http.middlewares.authelia.forwardAuth.address=https://auth.blokada.info/api/authz/forward-auth"
      - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name"
    restart: unless-stopped

  # Overlayer
  overlayer:
    image: ghcr.io/blokadainfo/overlayer:develop
    environment:
      OVERLAY_LOGO_PATH: "/logo.svg"
      OVERLAY_LOGO_HEIGHT: 128
      OVERLAY_LOGO_WIDTH: 128
      STREAMS_0_SRC: ${OVERLAYER_STREAMS_0_SRC}
      STREAMS_0_DST: ${OVERLAYER_STREAMS_0_DST}
      STREAMS_1_SRC: ${OVERLAYER_STREAMS_1_SRC}
      STREAMS_1_DST: ${OVERLAYER_STREAMS_1_DST}
      STREAMS_2_SRC: ${OVERLAYER_STREAMS_2_SRC}
      STREAMS_2_DST: ${OVERLAYER_STREAMS_2_DST}
      STREAMS_3_SRC: ${OVERLAYER_STREAMS_3_SRC}
      STREAMS_3_DST: ${OVERLAYER_STREAMS_3_DST}
    volumes:
      - type: bind
        source: ./logo.svg
        target: /logo.svg
        read_only: true
    restart: unless-stopped

  # Mumble
  mumble:
    image: docker.io/mumblevoip/mumble-server:v1.5.735
    environment:
      MUMBLE_SUPERUSER_NAME: admin
      MUMBLE_SUPERUSER_PASSWORD: ${MUMBLE_ADMIN_PASSWORD}
      MUMBLE_CONFIG_SERVER_PASSWORD: ${MUMBLE_USER_PASSWORD}
    volumes:
      - type: volume
        source: mumble-data-vol
        target: /data
        volume:
          nocopy: false
    ports:
      - "64738:64738/tcp"
      - "64738:64738/udp"
    networks:
      - internal
    restart: unless-stopped

  # (disabled) Open Stream Hub
  # osh-frontend:
  #   image: docker.io/sythinian/open-stream-hub-frontend:latest # TODO: not latest
  #   depends_on:
  #     - osh-backend
  #   environment:
  #     - VITE_REST_API_HOST=https://${OSH_DOMAIN}
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.osh-frontend.rule=Host(`${OSH_DOMAIN}`)"
  #     - "traefik.http.routers.osh-frontend.middlewares=crowdsec@docker,auth@docker"
  #     - "traefik.http.routers.osh-frontend.entrypoints=websecure"
  #     - "traefik.http.routers.osh-frontend.tls=true"
  #     - "traefik.http.routers.osh-frontend.tls.certresolver=letsencrypt"
  #     - "traefik.http.services.osh-frontend.loadbalancer.server.port=80"
  #     - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH}"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.enabled=true"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecmode=stream"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey=${BOUNCER_KEY_TRAEFIK}"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecappsecenabled=true"
  #   restart: unless-stopped

  # osh-backend:
  #   image: docker.io/sythinian/open-stream-hub-backend:latest # TODO: not latest
  #   depends_on:
  #     - osh-mongodb
  #   ports:
  #     - "19355:19355"
  #   environment:
  #     - MONGODB_URI=mongodb://osh-mongodb:27017/open-stream-hubV2
  #     - REST_API_PORT=6636
  #     - RTMP_SERVER_PORT=19355
  #     - RTMP_INJECT_HOST=rtmp://${OSH_DOMAIN}
  #     - RTMP_INJECT_ROOT=/inject
  #     - RTMP_WATCH_ROOT=/watch
  #     - HSL_PREVIEW_ENABLED=false # Consumes a lot of cpu
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.osh-backend.rule=Host(`${OSH_DOMAIN}`) && PathPrefix(`/api`)"
  #     - "traefik.http.routers.osh-backend.middlewares=crowdsec@docker,auth@docker"
  #     - "traefik.http.routers.osh-backend.entrypoints=websecure"
  #     - "traefik.http.routers.osh-backend.tls=true"
  #     - "traefik.http.routers.osh-backend.tls.certresolver=letsencrypt"
  #     - "traefik.http.services.osh-backend.loadbalancer.server.port=6636"
  #     - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH}"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.enabled=true"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecmode=stream"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey=${BOUNCER_KEY_TRAEFIK}"
  #     - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecappsecenabled=true"
  #   restart: unless-stopped

  # osh-mongodb:
  #   image: docker.io/library/mongo:8.0.12 # Has to be 4 when AVX isn't supported
  #   volumes:
  #     - type: volume
  #       source: mongodb-data-vol
  #       target: /data/db
  #       volume:
  #         nocopy: false
  #   networks:
  #     - internal
  #   restart: unless-stopped

networks:
  internal:

volumes:
  crowdsec-db-vol:
  crowdsec-conf-vol:
  traefik-logs-vol:
  traefik-acme-vol:
  restreamer-conf-vol:
  restreamer-data-vol:
  mumble-data-vol:
  # mongodb-data-vol:
